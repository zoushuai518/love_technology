Apache遇到的问题：APR not found:
[
#./configure --prefix……检查编辑环境时出现：
checking for APR... no
configure: error: APR not found .  Please read the documentation.
可以用./configure –help | grep apr 查看帮助。
--with-included-apr     Use bundled copies of APR/APR-Util
--with-apr=PATH         prefix for installed APR or the full path to apr-config
--with-apr-util=PATH    prefix for installed APU or the full path to
安装APR(Apache Portable Runtime )
下载：http://apr.apache.org/download.cgi
#cd /tmp/52lamp/ //源码存放位置
#tar -zxvf apr-1.4.2.tar.gz //unzip -o apr-1.4.2.zip
#cd apr-1.4.2
#./configure
#make
#make install
再次检查编译环境出现
checking for APR-util... no
configure: error: APR-util not found .  Please read the documentation.
#./configure –help | grep apr-util
--with-apr-util=PATH    prefix for installed APU or the full path to
下载：http://download.chinaunix.net/download/0001000/472.shtml
#tar -zxvf apr-util-1.3.9.tar.gz
#cd apr-util-1.3.9
#./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr
#make
#make install
./configure仍提示APR-util not found，增加--with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util后出现
configure: error: pcre-config for libpcre not found. PCRE is required and available from http://pcre.org/
#./configure –help | grep pcre
--with-pcre=PATH        Use external PCRE library
下载：http://sourceforge.net/projects/pcre
#unzip -o pcre-8.10.zip
#cd pcre-8.10
#./configure --prefix=/usr/local/pcre
#make
#make install
继续安装Apache/httpd，./configure 时加上参数 --with-apr=/usr/local/apr/ --with-apr-util=/usr/local/apr-util/ --with-pcre=/usr/local/pcre，这个问题就解决了
注意：Apache在安装时不会检查参数是否正确，错误的参数会直接被丢弃，不会报告给用户。但可以使用echo $?命令检查是否有错误，当输出结果为0时表示没有错误。
#echo $?
0
#make
#make install
复制Apache启动文件
#cp /usr/local/httpd/bin/apachectl /sbin/
启动Apache
#apachectl start
设置Apache开机自启动
#vi /etc/rc.d/rc.local
增加一行 /sbin/apachectl start
或者将httpd服务添加到ntsysv服务管理工具
#apachectl stop //关闭Apache以免不必要的麻烦
#cp /usr/local/httpd/bin/apachectl /etc/rc.d/init.d/httpd
#vi /etc/rc.d/init.d/httpd
修改为
#!/bin/sh
#
#chkconfig: 345 85 15 //#不能省略，注意空格
#description: httpd for 52lamp 20101016 21:54 //任意字符串
#
......
第二行中345的含义：
#       0 - operation completed successfully
#       1 -
#       2 - usage error
#       3 - httpd could not be started
#       4 - httpd could not be stopped
#       5 - httpd could not be started during a restart
修改有关权限
#cd /etc/rc.d/init.d/
#chmod a+x httpd
#chkconfig --add httpd
#ntsysv
httpd已经在列表中，按F1可以看到刚才编写的服务描述httpd for 52lamp 20101016 21:54。
#apachectl start
#ps -e |grep httpd
23247 ?        00:00:00 httpd
23248 ?        00:00:00 httpd
23249 ?        00:00:00 httpd
23251 ?        00:00:00 httpd
23252 ?        00:00:00 httpd
在浏览器中输入127.0.0.1，看起来一切正常；但是局域网内其他电脑不能访问！
#service iptables stop
如果不想关闭防火墙，放开80端口即可。
#vi /etc/sysconfig/iptables
增加一行-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
#service iptables restart //重启防火墙
现在一切OK
]

---

CentOS下编译安装PHP5.5:
[
#这里为了参数显示直观，我直接用回车换行，注意<a title="查看与编译有关的文章" href="http://cuelog.com/tag/%e7%bc%96%e8%af%91" target="_blank">编译</a>时请不要直接复制我的代码
--prefix=/web/server/php 
--with-config-file-path=/web/server/php/etc #php.ini和php-fpm.conf等配置文件的路径
--with-mysql=mysqlnd #如果使用mysqlnd，请先安装mysql，这里也可以填你的mysql安装地址，如果你用的yum或者<a title="查看与编译有关的文章" href="http://cuelog.com/tag/%e7%bc%96%e8%af%91" target="_blank">编译</a>mysql时没有指定安装路径，使用mysqlnd即可，
--with-mysqli=mysqlnd #同上
--with-pdo-mysql=mysqlnd #同上
--with-zlib=/usr/local/zlib #zlib安装路径
--with-zlib-dir=/usr/local/zlib #同上
--with-curl #curl我用的yum安装，所以不需要指定路径
--with-gettext #同上
--with-gd=/usr/local/gd2 #以下几个包都一样，需要先<a title="查看与编译有关的文章" href="http://cuelog.com/tag/%e7%bc%96%e8%af%91" target="_blank">编译</a>安装好
--with-freetype-dir=/usr/local/freetype 
--with-jpeg-dir=/usr/local/jpeg 
--with-png-dir=/usr/local/libpng 
--with-openssl=/usr/local/openssl 
--with-iconv=/usr/local/libiconv 
--with-pcre-dir=/usr/local/pcre
--with-mcrypt=/usr/local/libmcrypt 
--with-xmlrpc 
--enable-ftp 
--enable-mbstring 
--enable-soap 
--enable-sockets 
--enable-fpm #开启fpm, nginx服务器需要此选项，如果你的apache是通过fastcgi模式，也需要开启
--enable-zip 
--disable-debug 
--enable-calendar 
--enable-static  
--enable-inline-optimization 
--enable-maintainer-zts 
--enable-wddx
--
编译后也就是make && make install了，安装成功后，
cp -f ./sapi/fpm/init.d.php-fpm.in /etc/init.d/php-fpm
cp -f ./php.ini-production /web/server/php/etc/php.ini
#注意这里我复制的是生产模式的配置模版文件，开发模式复制-development
chmod 755 /etc/init.d/php-fpm
chmod 755 /web/server/php/sbin/php-fpm
/etc/init.d/php-fpm start
#启动php，没有差错的话，会提示：Starting php-fpm  done
]

