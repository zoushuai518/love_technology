[ Ubuntu 13.04 编译安装 amp {zs}]
# 仅供测试使用

uninstall:

首先，在安装之前要把原有的apache2，mysql5，和 php5完全卸载掉。
一、卸载mysql 
1.sudo apt-get autoremove --purge mysql-server-5.0
2.sudo apt-get remove mysql-server
3.sudo apt-get autoremove mysql-server
4.sudo apt-get remove mysql-common (非常重要)

上面的其实有一些是多余的，建议还是按照顺序执行一遍，
二、卸载apache
sudo apt-get remove apache2 //卸载安装包
sudo apt-get remove apache2.2-common //个人理解：卸载一些于apache2相关的数据
sudo apt-get autoremove apache2 //卸载安装包和依赖包

三、卸载php
sudo apt-get remove php5 //卸载安装包
sudo apt-get remove php5-common //个人理解：卸载一些于php5相关的数据
sudo apt-get autoremove php5 //卸载安装包和依赖包
以上方法卸载完毕之后，用
>dpkg -l |grep mysql    查看包含关键词"mysql"的软件包
如果依然有没卸载干净的mysql相关包，那么用如下方法卸载
>dpkg -r 软件包名称    卸载软件包
最后：dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P  清除残留的包数据（配置文件等）
进入安装阶段：
以下是参考勇哥平静的技术博客：http://www.arkulo.com/?post=69


install:
一、下载所需的软件
1、libxml2-2.6.30.tar.gz （一个xml c语言版的解析器）
ftp://ftp.gnome.org/pub/GNOME/sources/libxml2/2.6/libxml2-2.6.30.tar.gz
2、libmcrypt-2.5.8.tar.gz （php中mcrypt扩展,libmcrypt是加密算法扩展库）
http://prdownloads.sourceforge.net/mcrypt/libmcrypt-2.5.8.tar.gz?use_mirror=peterhost
3、zlib-1.2.8.tar.gz  （提供数据压缩用的函式库，为安装gd库做准备）
http://www.zlib.net/zlib-1.2.8.tar.gz
4、libpng-1.2.50.tar.gz （软件包包含 libpng 库.这些库被其他程式用于读写png文件，为安装gd库做准备）
ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng12/libpng-1.2.50.tar.gz
5、jpegsrc.v6b.tar.gz （为安装gd库做准备）
http://www.ijg.org/files/jpegsrc.v6b.tar.gz
6、freetype-2.5.0.tar.gz （字体库文件，为GD库做准备）
http://download.savannah.gnu.org/releases/freetype/freetype-2.5.0.tar.gz
7、autoconf-2.61.tar.gz （是用来产生configure文件的。）
ftp://ftp.gnu.org/gnu/autoconf/autoconf-2.61.tar.gz
8、gd-2.0.32.tar.gz （是php处理图形的扩展库）
http://down1.chinaunix.net/distfiles/gd-2.0.32.tar.gz
9、ngnix 
http://nginx.org/download/nginx-1.0.15.tar.gz
10、pcre （一个正则表达式库，nginx伪静态可以用到）
ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.30.tar.gz
11、mysql
http://mysql.mirror.kangaroot.net/Downloads/MySQL-5.5/mysql-5.5.32.tar.gz
12、php
http://cn2.php.net/get/php-5.4.10.tar.gz/from/this/mirror
13、cmake （编译mysql）
http://www.cmake.org/files/v2.8/cmake-2.8.9.tar.gz
15、zend guard （php脚本加密）
http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz
16、下载apache
http://www.apache.org/dist/httpd/httpd-2.4.4.tar.gz
17、下载apr（Apache库文件）
http://mirror.bit.edu.cn/apache/apr/apr-1.4.6.tar.gz
18、下载apr-util（Apache库文件）
http://mirror.bit.edu.cn/apache/apr/apr-util-1.4.1.tar.gz


二、安装
习惯把以上下载的文件全部解压到/usr/local/src下,比如：tar -zxvf libmcrypt-2.5.8.tar.gz
1、cd /usr/local/src/libxml2-2.6.30
./configure --prefix=/usr/local/libxml2  
make
如果出现错误：
In function 'open',     inlined from 'xmlNanoHTTPSave__internal_alias' at nanohttp.c:1588: /usr/include/bits/fcntl2.h:51: error: call to '__open_missing_mode' declared with attribute error: open with O_CREAT in second argument needs 3 arguments make[1]: *** [nanohttp.lo] Error 1 make[1]: Leaving directory `/home/winetcn/libxml2-2.6.30' make: *** [install-recursive] Error 1
解决方法：
打开目录下的nanohttp.c，第1588行由
fd = open(filename, O_CREAT | O_WRONLY(更换为 fd = open(filename, O_CREAT | O_WRONLY,0777(
make install

2、cd /usr/local/src/libmcrypt-2.5.8
./configure --prefix=/usr/local/libmcrypt
出现错误：
checking for C++ compiler default output file name... 
configure: error: C++ compiler cannot create executables
See `config.log' for more details.
解决办法：
sudo apt-get install g++
make && make install

3、cd /usr/local/src/zlib-1.2.8
./configure #--prefix=/usr/local/zlib
make && make install

4、cd /usr/local/src/libpng-1.2.50
./configure --prefix=/usr/local/libpng
make && make install
在安装过程中会出现如下错误：
error: zlib not installed 
解决的办法是：
cd /usr/local/src/zlib-1.2.8
make clean 清除上一次make产生的文件，然后 ./configure make && make install 
cd /usr/local/src/libpng-1.2.50
./configure --prefix=/usr/local/libpng
make && make install

6、安装jpeg6库文件
mkdir /usr/local/jpeg6
mkdir /usr/local/jpeg6/bin
mkdir /usr/local/jpeg6/lib
mkdir /usr/local/jpeg6/include
mkdir  -p /usr/local/jpeg6/man/man1
cd /usr/local/src/jpeg-6b
./configure --prefix=/usr/local/jpeg6  \
> --enable-shared \   //建立共享库使用的GNU libtool
>--enable-static  \     //建立静态库使用的libtool
make && make insall

 7、cd  /usr/local/src/freetype-2.5.0
 ./configure --prefix=/usr/local/freetype
 如果提示找不到libpng-config，做一个软链接到/usr/bin目录下
 make && make install

 8、cd /usr/local/src/autoconf-2.61
 出现错误：
 checking whether m4 supports frozen files... no
 configure: error: GNU M4 1.4 is required
 解决：下载 ftp://ftp.gnu.org/gnu/m4/m4-1.4.9.tar.gz 并编译安装
 ./configure make && make install

9、安装GD库
cd /usr/local/src/gd-2.0.32
./configure --prefix=/usr/local/gd2/ --with-zlib=/usr/local/zlib/ --with-jpeg=/usr/local/jpeg6/ --with-png=/usr/local/libpng/ --with-freetype=/usr/local/freetype
make && make install
以上子make过程中会出现如下错误：
“gd_png.c:16:53: error: png.h: No such file or directory
gd_png.c:47: error: expected specifier-qualifier-list before 'jmp_buf'
gd_png.c:54: error: expected ')' before 'png_ptr'
gd_png.c:82: error: expected ')' before 'png_ptr'
gd_png.c:92: error: expected ')' before 'png_ptr'
gd_png.c:98: error: expected ')' before 'png_ptr'”
处理方法：
vi gd_png.c
将
#include “png.h”             
替换成：
#include “/usr/local/libpng/include/png.h”             
然后再make就可以了
注：include“”双引号里包含的是libpng安装的路径里的include文件夹里的png.h文件

10、cmake 
cd /usr/local/src
tar zxvf cmake-2.8.9.tar.gz
cd cmake-2.8.9
./configure
我在这出现一个错误：
---------------------------------------------
Error when bootstrapping CMake:
Problem while running make
---------------------------------------------
Log of errors: /home/matt/Files/Programs/cmake-2.6.4/Bootstrap.cmk/cmake_bootstrap.log
---------------------------------------------
matt@Lindy:~/Files/Programs/cmake-2.6.4$ 
matt@Lindy:~/Files/Programs/cmake-2.6.4$ 
解决办法：
sudo apt-get install build-essential
make
make install

11、pcre
cd /usr/local/src
mkdir /usr/local/pcre #创建安装目录
tar zxvf pcre-8.30.tar.gz
cd pcre-8.30
./configure --prefix=/usr/local/pcre #配置
make
make install

12、安装apr
cd /usr/local/src
tar zxvf  apr-1.4.6.tar.gz
cd apr-1.4.6
./configure --prefix=/usr/local/apr
make
make install

13、安装apr-util
tar zxvf apr-util-1.4.1.tar.gz
cd apr-util-1.4.1
./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/bin/apr-1-config
make
make install

14、mysql
groupadd mysql #添加mysql组
useradd -g mysql mysql -s /bin/false #创建用户mysql并加入到mysql组，不允许mysql用户直接登录系统
mkdir -p /data/mysql #创建MySQL数据库存放目录
chown -R mysql:mysql /data/mysql #设置MySQL数据库目录权限
mkdir -p /usr/local/mysql #创建MySQL安装目录
cd /usr/local/src
tar zxvf mysql-5.5.32.tar.gz
cd mysql-5.5.32
cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/data/mysql -DSYSCONFDIR=/etc #配置
出现如下错误：
CMake Error at cmake/readline.cmake:83 (MESSAGE):
Curses library not found.  Please install appropriate package
remove CMakeCache.txt and rerun cmake.On Debian/Ubuntu, package name is libncurses5-dev, on Redhat and derivates it is ncurses-devel.
Call Stack (most recent call first):
cmake/readline.cmake:127 (FIND_CURSES)
cmake/readline.cmake:217 (MYSQL_USE_BUNDLED_LIBEDIT)
CMakeLists.txt:268 (MYSQL_CHECK_READLINE)
-- Configuring incomplete, errors occurred!
如回显所示，ubuntu下安装libncurses5-dev；redhat下安装ncurses-devel，并删除当前目录CMakeCache.txt(必须删除，否则报错依旧)并重新运行：
$ cmake .
：解决：
1、remove CMakeCache.txt；
2:、yum install ncurses-devel  或 sudo apt-get install libncurses5-dev
3、重新运行cmake  .
make
make install
cd /usr/local/mysql
cp ./support-files/my-huge.cnf /etc/my.cnf #拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）
vi /etc/my.cnf #编辑配置文件,在 [mysqld] 部分增加
datadir = /data/mysql #添加MySQL数据库路径
./scripts/mysql_install_db --user=mysql #生成mysql系统数据库
cp ./support-files/mysql.server /etc/init.d/mysqld #把Mysql加入系统启动
chmod 755 /etc/init.d/mysqld #增加执行权限
chkconfig mysqld on #加入开机启动
vi /etc/init.d/mysqld #编辑
basedir = /usr/local/mysql #MySQL程序安装路径
datadir = /data/mysql #MySQl数据库存放目录
service mysqld start #启动
vi /etc/profile #把mysql服务加入系统环境变量：在最后添加下面这一行
export PATH=$PATH:/usr/local/mysql/bin
下面这两行把myslq的库文件链接到系统默认的位置，这样你在编译类似PHP等软件时可以不用指定mysql的库文件地址。
ln -s /usr/local/mysql/lib/mysql /usr/lib/mysql
ln -s /usr/local/mysql/include/mysql /usr/include/mysql
shutdown -r now #需要重启系统，等待系统重新启动之后继续在终端命令行下面操作
mysql_secure_installation #设置Mysql密码
根据提示按Y 回车输入2次密码
或者直接修改密码/usr/local/mysql/bin/mysqladmin -u root -p password "123456" #修改密码
service mysqld restart #重启
到此，mysql安装完成！


15、安装apache2
cd /usr/local/src
tar -zvxf httpd-2.4.4.tar.gz
cd  httpd-2.4.4
mkdir -p /usr/local/apache2  #创建安装目录
1 ./configure --prefix=/usr/local/apache2 --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --with-ssl --enable-ssl --enable-module=so --enable-rewrite --enable-cgid --enable-cgi --with-pcre=/usr/local/pcre   #配置
2./configure --prefix=/usr/local/apache2 --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --with-zlib=/usr/local/zlib --with-pcre=/usr/local/pcre   --enable-so --enable-rewrite=shared --enable-deflate=shared --enable-expires=shared --enable-static-support   #配置二

10)出现configure: WARNING: OpenSSL version is too old；checking whether to enable mod_ssl... configure: error: mod_ssl has been requested but can not be built due to prerequisite failures；解决办法：
10.1)openssl源码下载地址http://www.openssl.org/source/  下载源码
10.2)解压到/usr/src，在下载目录执行tar -zxvf openssl-x.x.x.tar.gz -C /usr/src/  (我用的是openssl-1.0.1c.tar.gz)
10.3)进入目录/usr/src/openssl-1.0.1c,执行./config --prefix=/usr/local/openssl；make；make install

11)再次进入目录/usr/src/httpd-2.4.3，增加参数--with-ssl=/usr/local/openssl，重新执行：./configure --prefix=/usr/local/apache2 --with-mpm=worker --enable-cache --enable-disk-cache --enable-mem-cache --enable-file-cache --enable-nonportable-atomics --enable-mods-shared=most --enable-so --enable-rewrite --enable-ssl --with-apr=/usr/local/apr/ --with-apr-util=/usr/local/apr-util/ --with-pcre=/usr/local/pcre --with-ssl=/usr/local/openssl ;make ;make install;

make    #编译
make install  #安装
/usr/local/apache2/bin/apachectl -k start  #启动
vi /usr/local/apache2/conf/httpd.conf   #编辑配置文件
找到：#ServerName www.example.com:80
修改为：ServerName www.osyunwei.com:80
找到：DirectoryIndex index.html
修改为：DirectoryIndex index.html index.php
找到：Options Indexes FollowSymLinks
修改为：Options FollowSymLinks    #不显示目录结构
找到AllowOverride None 
修改为：AllowOverride All   #开启apache支持伪静态，有两处都做修改
LoadModule rewrite_module modules/mod_rewrite.so   #取消前面的注释，开启apache支持伪静态
vi /etc/profile  #添加apache服务系统环境变量
在最后添加下面这一行
export PATH=$PATH:/usr/local/apache2/bin
cp /usr/local/apache2/bin/apachectl /etc/rc.d/init.d/httpd      #把apache加入到系统启动
vi /etc/init.d/httpd   #编辑文件
在#!/bin/sh下面添加以下两行
#chkconfig:2345 10 90
#descrption:Activates/Deactivates Apache Web Server
chown  daemon.daemon  -R /usr/local/apache2/htdocs  #更改目录所有者
chmod   700 /usr/local/apache2/htdocs  -R #更改apache网站目录权限
chkconfig httpd on    #设置开机启动
/etc/init.d/httpd start
service httpd restart


16、php
cd /usr/local/src
tar -zvxf php-5.3.16.tar.gz
cd php-5.3.16
mkdir -p /usr/local/php5 #建立php安装目录 
配置一：
./configure --prefix=/usr/local/php5 --with-config-file-path=/usr/local/php5/etc --with-apxs2=/usr/local/apache2/bin/apxs  --with-mysql=/usr/local/mysql  --with-mysqli=/usr/local/mysql/bin/mysql_config --with-mysql-sock=/tmp/mysql.sock --with-gd  --with-iconv --with-freetype --with-jpeg --with-png --with-zlib --with-libxml --enable-xml --enable-discard-path --enable-magic-quotes --enable-safe-mode --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curlwrappers --enable-mbregex --enable-fastcgi --enable-force-cgi-redirect --enable-mbstring --enable-ftp --enable-gd-native-ttf --with-openssl --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --with-mime-magic --enable-suhosin --enable-session --with-mcrypt           
配置二：
./configure --prefix=/usr/local/php5/ --with-config-file-path=/usr/local/php5/etc --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql --with-mysqli=/usr/local/mysql/bin/mysql_config --with-gd=/usr/local/gd2 --with-libxml-dir=/usr/local/libxml2 --with-png-dir=/usr/local/libpng --with-jpeg-dir=/usr/local/jpeg6 --with-freetype-dir=/usr/local/freetype --with-mcrypt=/usr/local/libmcrypt --with-zlib-dir=/usr/local/zlib --enable-soap --enable-mbstring=all --enable-sockets  --disable-debug
make
make的时候出现错误
In file included from /kk/php-5.4.0/ext/gd/gd.c:103:

/kk/php-5.4.0/ext/gd/gd_ctx.c: In function ‘_php_image_stream_putc’:

/kk/php-5.4.0/ext/gd/gd_ctx.c:51: 错误：‘struct gdIOCtx’ 没有名为 ‘data’ 的成员

/kk/php-5.4.0/ext/gd/gd_ctx.c: In function ‘_php_image_stream_putbuf’:

/kk/php-5.4.0/ext/gd/gd_ctx.c:58: 错误：‘struct gdIOCtx’ 没有名为 ‘data’ 的成员

/kk/php-5.4.0/ext/gd/gd_ctx.c: In function ‘_php_image_stream_ctxfree’:

/kk/php-5.4.0/ext/gd/gd_ctx.c:67: 错误：‘struct gdIOCtx’ 没有名为 ‘data’ 的成员

/kk/php-5.4.0/ext/gd/gd_ctx.c:68: 错误：‘struct gdIOCtx’ 没有名为 ‘data’ 的成员

/kk/php-5.4.0/ext/gd/gd_ctx.c:69: 错误：‘struct gdIOCtx’ 没有名为 ‘data’ 的成员

/kk/php-5.4.0/ext/gd/gd_ctx.c: In function ‘_php_image_output_ctx’:

/kk/php-5.4.0/ext/gd/gd_ctx.c:153: 错误：‘gdIOCtx’ 没有名为 ‘data’ 的成员

make: *** [ext/gd/gd.lo] 错误 1

解决：
vi /usr/local/gd2/include/gd_io.h

typedef struct gdIOCtx结构中增加       void (*data(      在它的结束括号前

make install
cp php.ini-production /usr/local/php5/etc/php.ini #复制php配置文件到安装目录
rm -rf /etc/php.ini #删除系统自带配置文件
ln -s /usr/local/php5/etc/php.ini /etc/php.ini #添加软链接
cp /usr/local/php5/etc/php-fpm.conf.default /usr/local/php5/etc/php-fpm.conf #拷贝模板文件为php-fpm配置文件
vi /usr/local/php5/etc/php-fpm.conf #编辑
user = www #设置php-fpm运行账号为www
group = www #设置php-fpm运行组为www
pid = run/php-fpm.pid #取消前面的分号
设置 php-fpm开机启动
cp /usr/local/src/php-5.3.16/sapi/fpm/init.d.php-fpm /etc/rc.d/init.d/php-fpm #拷贝php-fpm到启动目录
我的文件在/usr/local/src/php-5.4.10/sapi/fpm/php-fpm.conf.in
chmod +x /etc/rc.d/init.d/php-fpm #添加执行权限
chkconfig php-fpm on #设置开机启动
vi /usr/local/php5/etc/php.ini #编辑配置文件
找到：;open_basedir =
修改为：open_basedir = .:/tmp/ #防止php木马跨站，重要！！
找到：disable_functions =
修改为：disable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname
#列出PHP可以禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。
找到：;date.timezone =
修改为：date.timezone = PRC #设置时区
找到：expose_php = On
修改为：expose_php = OFF #禁止显示php版本的信息
找到：display_errors = On
修改为：display_errors = OFF #关闭错误提示
17、配置apache支持php
vi /usr/local/apache2/conf/httpd.conf  #编辑apache配置文件
在LoadModule php5_module        modules/libphp5.so这一行下面添加、
AddType application/x-httpd-php .php  （注意：php .php这个点前面有一个空格）
service httpd restart    #重启apache
service mysqld restart   #重启mysql
测试篇
cd  /usr/local/apache2/htdocsvi index.php   #输入下面内容
<?php
	phpinfo()
?>
18、配置php支持Zend Guard
系统运维 www.osyunwei.com 温馨提醒：qihang01原创内容版权所有,转载请注明出处及原文链接
安装Zend Guard
cd /usr/local/src
mkdir /usr/local/zend #建立Zend安装目录
tar xvfz ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz #解压安装文件
cp ZendGuardLoader-php-5.3-linux-glibc23-i386/php-5.3.x/ZendGuardLoader.so /usr/local/zend/ #拷贝文件到安装目录
vi /usr/local/php5/etc/php.ini #编辑文件
在最后位置添加以下内容
[Zend Guard]
zend_extension=/usr/local/zend/ZendGuardLoader.so
zend_loader.enable=1
zend_loader.disable_licensing=0
zend_loader.obfuscation_level_support=3
zend_loader.license_path=
ok！
Vimium has been updated to 1.41.x]
